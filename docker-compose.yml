version: '3'
services:
  user-service:
    image: user-service
    build: ./user_service
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      - postgres
      - zookeeper
    links:
      - postgres
      - zookeeper

  restaurant-service:
    image: restaurant-service
    build: restaurant_service
    ports:
      - "8081:8081"
    restart: always
    depends_on:
      - solr
    links:
      - solr

  logger-service:
    image: logger-service
    build: ./logger_service
    ports:
      - "8082:8082"
    restart: always
    depends_on:
      - postgres
      - zookeeper
    links:
      - postgres
      - zookeeper

  ai-service:
    image: ai-service
    build: ./ai_service
    ports:
      - "8083:8083"
    restart: always

  postgres:
    image: postgres:latest
    container_name: restaurant_suggestion_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1212
      POSTGRES_DB: restaurant_suggestion
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  solr:
    image: solr:latest
    container_name: solr
    ports:
      - "127.0.0.1:8983:8983"
    volumes:
      - ./data:/var/solr
    command:
      - solr-precreate
      - n11-restaurants

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CREATE_TOPICS: "errorLog:1:1, infoLog:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper



volumes:
  postgres_data: